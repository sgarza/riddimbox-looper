{"version":3,"file":"index.umd.bundle.js","sources":["../src/looper.js","../src/providers/tone-mediarecorder-provider.js","../src/providers/riddimbox-transport-provider.js","../src/constants.js"],"sourcesContent":["class Looper {\n  static _mediaRecorderProvider = null;\n  static _transportProvider = null;\n\n  static get mediaRecorderProvider() {\n    Looper._throwIfMediaRecorderProvderNotSet();\n    return Looper._mediaRecorderProvider;\n  }\n\n  static get transportProvider() {\n    Looper._throwIfTransportProviderNotSet();\n    return this._transportProvider;\n  }\n\n  static get loops() {\n    return Looper.mediaRecorderProvider.loops;\n  }\n\n  static set mediaRecorderProvider(mediaRecorderProvider) {\n    Looper._mediaRecorderProvider = mediaRecorderProvider;\n  }\n\n  static set transportProvider(transportProvider) {\n    Looper._transportProvider = transportProvider;\n\n    Looper._setupTransportEvents();\n  }\n\n  static set input(input) {\n    Looper.mediaRecorderProvider.input = input;\n  }\n\n  static startRecording() {\n    Looper.mediaRecorderProvider.startRecording();\n  }\n\n  static stopRecording() {\n    Looper.mediaRecorderProvider.stopRecording();\n  }\n\n  static restartRecording() {\n    Looper.mediaRecorderProvider.stopRecording();\n    Looper.mediaRecorderProvider.startRecording();\n  }\n\n  static selectCurrentLoop() {\n    Looper._throwIfTransportProviderNotSet();\n    Looper.mediaRecorderProvider.selectCurrentLoop = true;\n  }\n\n  static _throwIfMediaRecorderProvderNotSet() {\n    if (!Looper._mediaRecorderProvider) {\n      throw new Error(\n        \"You need to set a MediaRecorderProvider first, try with ToneMediaRecorderProvider class.\"\n      );\n    }\n  }\n\n  static _throwIfTransportProviderNotSet() {\n    if (!Looper._transportProvider) {\n      throw new Error(\n        \"You need to set a TransportProvider first, try with RiddimBoxTransportProvider class.\"\n      );\n    }\n  }\n\n  static _setupTransportEvents() {\n    this.transportProvider.on(\"start\", Looper.startRecording);\n    this.transportProvider.on(\"stop\", Looper.stopRecording);\n    this.transportProvider.on(\"loop\", Looper.restartRecording);\n  }\n}\n\nexport default Looper;\n","class ToneMediaRecorderProvider {\n  constructor(Tone, MediaRecorder) {\n    this.engine = Tone;\n    this.MediaRecorder = MediaRecorder;\n    this.recorderStreamDestination = null;\n    this.recorder = null;\n    this.selectCurrentLoop = false;\n    this.loops = [];\n\n    this._setupMediaRecorder();\n  }\n\n  set input(input) {\n    input.connect(this.recorderStreamDestination);\n  }\n\n  startRecording() {\n    this.recorder.start();\n  }\n\n  stopRecording() {\n    this.recorder.stop();\n  }\n\n  _setupMediaRecorder() {\n    this.recorderStreamDestination = this.engine.context.createMediaStreamDestination();\n    this.recorder = new this.MediaRecorder(\n      this.recorderStreamDestination.stream\n    );\n\n    this.recorder.ondataavailable = this._onDataAvailableHandler;\n  }\n\n  _onDataAvailableHandler(e) {\n    if (!this.selectCurrentLoop) return;\n\n    this.selectCurrentLoop = false;\n\n    const blob = new Blob([e.data], {\n      type: \"audio/webm;; codec=opus\"\n    });\n\n    const url = URL.createObjectURL(blob);\n\n    const buffer = new this.engine.Buffer(url, () => {\n      this._createBufferCallback(buffer);\n    });\n  }\n\n  _createBufferCallback(buffer) {\n    const player = new this.engine.Player(buffer);\n\n    this.loops.push({\n      player\n    });\n  }\n}\n\nexport default ToneMediaRecorderProvider;\n","class RiddimBoxTransportProvider {\n  constructor(Transport) {\n    this.transport = Transport;\n    this.loopLength = 4;\n\n    this.transport.on(\"beat\", beats => {\n      if (beats % this.loopLength === 0) {\n        this.transport.provider.emit(\"loop\");\n      }\n    });\n  }\n\n  on(event, handler) {\n    this.transport.on(event, handler);\n  }\n}\n\nexport default RiddimBoxTransportProvider;\n","export default {\n  MEDIA_RECORDER_RECORDING: \"recording\",\n  MEDIA_RECORDER_INACTIVE: \"inactive\"\n};\n"],"names":["Looper","mediaRecorderProvider","startRecording","stopRecording","_throwIfTransportProviderNotSet","selectCurrentLoop","_mediaRecorderProvider","Error","_transportProvider","transportProvider","on","restartRecording","_throwIfMediaRecorderProvderNotSet","_setupTransportEvents","loops","input","ToneMediaRecorderProvider","Tone","MediaRecorder","engine","recorderStreamDestination","recorder","_setupMediaRecorder","start","stop","context","createMediaStreamDestination","stream","ondataavailable","_onDataAvailableHandler","e","blob","Blob","data","type","url","URL","createObjectURL","buffer","Buffer","_createBufferCallback","player","Player","push","connect","RiddimBoxTransportProvider","Transport","transport","loopLength","beats","provider","emit","event","handler","MEDIA_RECORDER_RECORDING","MEDIA_RECORDER_INACTIVE"],"mappings":"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"}