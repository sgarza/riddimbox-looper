{"version":3,"file":"index.umd.bundle.js","sources":["../src/looper.js","../src/providers/tone-mediarecorder-provider.js","../src/constants.js","../src/providers/riddimbox-transport-provider.js"],"sourcesContent":["class Looper {\n  static _mediaRecorderProvider = null;\n  static _transportProvider = null;\n\n  static get mediaRecorderProvider() {\n    Looper._throwIfMediaRecorderProvderNotSet();\n    return Looper._mediaRecorderProvider;\n  }\n\n  static get transportProvider() {\n    Looper._throwIfTransportProviderNotSet();\n    return Looper._transportProvider;\n  }\n\n  static get loops() {\n    return Looper.mediaRecorderProvider.loops;\n  }\n\n  static get currentLoopLength() {\n    return Looper.transportProvider.currentLoopLength;\n  }\n\n  static set mediaRecorderProvider(mediaRecorderProvider) {\n    Looper._mediaRecorderProvider = mediaRecorderProvider;\n  }\n\n  static set transportProvider(transportProvider) {\n    Looper._transportProvider = transportProvider;\n\n    Looper._setupTransportEvents();\n  }\n\n  static set input(input) {\n    Looper.mediaRecorderProvider.input = input;\n  }\n\n  static set output(output) {\n    Looper.mediaRecorderProvider.output = output;\n  }\n\n  static startRecording() {\n    Looper.mediaRecorderProvider.startRecording();\n  }\n\n  static stopRecording() {\n    Looper.mediaRecorderProvider.stopRecording();\n  }\n\n  static restartRecording() {\n    Looper.mediaRecorderProvider.stopRecording();\n    Looper.mediaRecorderProvider.startRecording();\n  }\n\n  static selectCurrentLoop() {\n    Looper._throwIfTransportProviderNotSet();\n    Looper.mediaRecorderProvider.selectCurrentLoop = true;\n  }\n\n  static increaseCurrentLoopLength() {\n    Looper.transportProvider.increaseCurrentLoopLength();\n  }\n\n  static decreaseCurrentLoopLength() {\n    Looper.transportProvider.decreaseCurrentLoopLength();\n  }\n\n  static _throwIfMediaRecorderProvderNotSet() {\n    if (!Looper._mediaRecorderProvider) {\n      throw new Error(\n        \"You need to set a MediaRecorderProvider first, try with ToneMediaRecorderProvider class.\"\n      );\n    }\n  }\n\n  static _throwIfTransportProviderNotSet() {\n    if (!Looper._transportProvider) {\n      throw new Error(\n        \"You need to set a TransportProvider first, try with RiddimBoxTransportProvider class.\"\n      );\n    }\n  }\n\n  static _setupTransportEvents() {\n    Looper.transportProvider.on(\"start\", Looper.startRecording);\n    Looper.transportProvider.on(\"stop\", Looper.stopRecording);\n    Looper.transportProvider.on(\"loop\", Looper.restartRecording);\n  }\n}\n\nexport default Looper;\n","class ToneMediaRecorderProvider {\n  constructor(Tone, MediaRecorder) {\n    this.engine = Tone;\n    this.MediaRecorder = MediaRecorder;\n    this.recorderStreamDestination = null;\n    this.recorder = null;\n    this.selectCurrentLoop = false;\n    this.loops = [];\n    this._output = Tone.Master;\n\n    this._setupMediaRecorder();\n  }\n\n  set input(input) {\n    input.connect(this.recorderStreamDestination);\n  }\n\n  set output(output) {\n    this.loops.forEach(loop => {\n      loop.player.disconnect(this._output);\n      loop.player.connect(output);\n    });\n\n    this._output = output;\n  }\n\n  startRecording() {\n    this.recorder.start();\n  }\n\n  stopRecording() {\n    this.recorder.stop();\n  }\n\n  _setupMediaRecorder() {\n    this.recorderStreamDestination = this.engine.context.createMediaStreamDestination();\n    this.recorder = new this.MediaRecorder(\n      this.recorderStreamDestination.stream\n    );\n\n    this.recorder.ondataavailable = this._onDataAvailableHandler;\n  }\n\n  _onDataAvailableHandler(e) {\n    if (!this.selectCurrentLoop) return;\n\n    this.selectCurrentLoop = false;\n\n    const blob = new Blob([e.data], {\n      type: \"audio/webm;; codec=opus\"\n    });\n\n    const url = URL.createObjectURL(blob);\n\n    const buffer = new this.engine.Buffer(url, () => {\n      this._createBufferCallback(buffer);\n    });\n  }\n\n  _createBufferCallback(buffer) {\n    const player = new this.engine.Player(buffer);\n\n    player.connect(this._output);\n\n    this.loops.push({\n      player\n    });\n  }\n}\n\nexport default ToneMediaRecorderProvider;\n","export default {\n  MEDIA_RECORDER_RECORDING: \"recording\",\n  MEDIA_RECORDER_INACTIVE: \"inactive\",\n  MIN_LOOP_LENGTH: 4,\n  MAX_LOOP_LENGTH: 64\n};\n","import constants from \"../constants\";\nconst { MIN_LOOP_LENGTH, MAX_LOOP_LENGTH } = constants;\n\nclass RiddimBoxTransportProvider {\n  constructor(Transport) {\n    this.transport = Transport;\n    this.currentLoopLength = MIN_LOOP_LENGTH;\n\n    this.transport.on(\"beat\", beats => {\n      if (beats % this.currentLoopLength === 0) {\n        this.transport.provider.emit(\"loop\");\n      }\n    });\n  }\n\n  on(event, handler) {\n    this.transport.on(event, handler);\n  }\n\n  increaseCurrentLoopLength() {\n    let length = this.currentLoopLength + MIN_LOOP_LENGTH;\n\n    if (length > MAX_LOOP_LENGTH) {\n      length = MIN_LOOP_LENGTH;\n    }\n\n    this.currentLoopLength = length;\n  }\n\n  decreaseCurrentLoopLength() {\n    let length = this.currentLoopLength - MIN_LOOP_LENGTH;\n\n    if (length < MIN_LOOP_LENGTH) {\n      length = MAX_LOOP_LENGTH;\n    }\n\n    this.currentLoopLength = length;\n  }\n}\n\nexport default RiddimBoxTransportProvider;\n"],"names":["Looper","mediaRecorderProvider","startRecording","stopRecording","_throwIfTransportProviderNotSet","selectCurrentLoop","transportProvider","increaseCurrentLoopLength","decreaseCurrentLoopLength","_mediaRecorderProvider","Error","_transportProvider","on","restartRecording","_throwIfMediaRecorderProvderNotSet","_setupTransportEvents","loops","currentLoopLength","input","output","ToneMediaRecorderProvider","Tone","MediaRecorder","engine","recorderStreamDestination","recorder","_output","Master","_setupMediaRecorder","start","stop","context","createMediaStreamDestination","stream","ondataavailable","_onDataAvailableHandler","e","blob","Blob","data","type","url","URL","createObjectURL","buffer","Buffer","_createBufferCallback","player","Player","connect","push","forEach","loop","disconnect","MEDIA_RECORDER_RECORDING","MEDIA_RECORDER_INACTIVE","MIN_LOOP_LENGTH","MAX_LOOP_LENGTH","constants","RiddimBoxTransportProvider","Transport","transport","beats","provider","emit","event","handler","length"],"mappings":"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"}